package gui;

import java.util.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.AncestorEvent;
import javax.swing.event.AncestorListener;

import java.util.ArrayList;

import calculator.*;

public class Main {
	JFrame frame = new JFrame();
	JPanel main_p = new JPanel();
	Font font_1 = new Font("Serif", Font.CENTER_BASELINE, 45);
	Font font_2 = new Font("Serif", Font.BOLD, 20);
	
	JPanel digit_p = new JPanel();
	JPanel oper_p = new JPanel();
	
	JButton RUN = new JButton("Calculate");
	
	JLabel sys = new JLabel("ASSIGNMENT_8");
	
	ArrayList<JButton> Digit_Buttons = new ArrayList<JButton>();
	JButton oper_addition = new JButton("+");
	JButton oper_deduction = new JButton("-");
	JButton oper_multiplication = new JButton("*");
	JButton oper_division = new JButton("/");
	JButton dot = new JButton(".");
	JButton double_zero = new JButton("00");
	JButton CE = new JButton("CE");
	JButton C = new JButton("C");
	JButton delete_one = new JButton("<=");
	
	JTextArea Result = new JTextArea();
	
	GridLayout digit_layout = new GridLayout();
	GridLayout operand_layout = new GridLayout();
	
	ArrayList<String> saveArray = new ArrayList<String>();
	ArrayList<Double> InterArray = new ArrayList<Double>();
	ArrayList<String> strTemp_1 = new ArrayList<String>();
	ArrayList<Double> numTemp_1 = new ArrayList<Double>();
	String temp = "";
	Double number = 0.d;
	
	Main()
	{
		frame.setSize(1080, 800); frame.setLayout(null);
		digit_layout.setColumns(3); digit_layout.setRows(5);
		operand_layout.setColumns(1); operand_layout.setRows(4);
		digit_p.setLayout(digit_layout); oper_p.setLayout(operand_layout);
		Result.setBounds(550, 50, 400, 50); Result.setFont(font_1); Result.setForeground(Color.WHITE); Result.setBackground(Color.BLACK);
		
		/*Adding digits to a digit_p*/
		digit_p.add(CE); digit_p.add(C); digit_p.add(delete_one);
		for(int i = 0; i < 10; i++)
		{
			Digit_Buttons.add(new JButton("" + i));
			if(i > 0)
			{
				digit_p.add(Digit_Buttons.get(i));
			}
		}
		digit_p.add(double_zero); digit_p.add(Digit_Buttons.get(0)); digit_p.add(dot);
		
		/*Adding Operands to a oper_p*/
		oper_p.add(oper_addition); oper_p.add(oper_deduction); oper_p.add(oper_multiplication); oper_p.add(oper_division);
		
		/*Adding Action Listeners*/
		for(int i = 0; i < 10; i++)
		{
			final int j = i;
			Digit_Buttons.get(i).addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent e)
				{
					temp = "";
					strTemp_1.add(String.valueOf(j));
					for(int i = 0; i < strTemp_1.size(); i++)
					{
						temp += strTemp_1.get(i);
					}
					Result.setText(temp);
					
					numTemp_1.clear();
					numTemp_1.add(new Converter().Convert(temp));
					System.out.println(temp);
				}
			});
		}
		
		dot.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e)
			{
				temp = "";
				strTemp_1.add(".");
				for(int i = 0; i < strTemp_1.size(); i++)
				{
					temp += strTemp_1.get(i);
				}
				Result.setText(temp);
			}
		});
		
		/*Operands Action Listeners*/
		oper_addition.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e)
			{
				saveArray.add(temp);
				temp = "";
				strTemp_1.clear();
				saveArray.add("+");
				System.out.println(saveArray);
			}
		});
		oper_deduction.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e)
			{
				saveArray.add(temp);
				temp = "";
				strTemp_1.clear();
				saveArray.add("-");
				System.out.println(saveArray);
			}
		});
		oper_multiplication.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e)
			{
				saveArray.add(temp);
				temp = "";
				strTemp_1.clear();
				saveArray.add("*");
				System.out.println(saveArray);
			}
		});
		oper_division.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e)
			{
				saveArray.add(temp);
				temp = "";
				strTemp_1.clear();
				saveArray.add("/");
				System.out.println(saveArray);
			}
		});
		//How to Utilize Multi-action Listener?
		
		/*RUN Action Listener*/
		RUN.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e)
			{
				temp = "";
				strTemp_1.clear();
				saveArray.add(numTemp_1.get(numTemp_1.size() - 1).toString());
				Calculation(saveArray, InterArray, "");
				Result.setText(saveArray.get(saveArray.size() - 1).toString());
			}
		});
		
		
		
		RUN.setBounds(50, 550, 470, 30);
		digit_p.setBounds(50, 50, 400, 500); oper_p.setBounds(450, 50, 70, 500);
		
		frame.add(RUN); frame.add(Result);
		frame.add(digit_p); frame.add(oper_p);
		frame.setVisible(true);
	}
	
	public static void main(String[] ar)
	{
		Main M = new Main();
	}
	
	void Calculation(ArrayList A_1, ArrayList Inter, String operand)
	{
		saveArray.add(temp);
		temp = "";
		strTemp_1.clear();
		number = Double.parseDouble(saveArray.get(0));
		System.out.println(saveArray);
		
		for(int i = 0; i < saveArray.size(); i++)
		{
			if(i < 3)
			{
			if(saveArray.get(i) == "+")
			{
				number = new Calculator().Addition(Double.parseDouble(saveArray.get(i - 1)), Double.parseDouble(
						saveArray.get(i + 1)));
			}
			else if(saveArray.get(i) == "-")
			{
				number = new Calculator().Deduction(Double.parseDouble(saveArray.get(i - 1)), Double.parseDouble(
						saveArray.get(i + 1)));
			}
			else if(saveArray.get(i) == "*")
			{
				number = new Calculator().Multiplication(Double.parseDouble(saveArray.get(i - 1)), Double.parseDouble(
						saveArray.get(i + 1)));
			}
				else if(saveArray.get(i) == "/")
				{
					number = new Calculator().Division(Double.parseDouble(saveArray.get(i - 1)), Double.parseDouble(
							saveArray.get(i + 1)));
				}
				else {
					continue;
				}
			}
			else
			{
				if(saveArray.get(i) == "+")
				{
					number = new Calculator().Addition(Double.parseDouble((String) Inter.get(Inter.size() - 1)), Double.parseDouble(
							saveArray.get(i + 1)));
				}
				else if(saveArray.get(i) == "-")
				{
					number = new Calculator().Deduction(Double.parseDouble((String) Inter.get(Inter.size() - 1)), Double.parseDouble(
							saveArray.get(i + 1)));
				}
				else if(saveArray.get(i) == "*")
				{
					number = new Calculator().Multiplication(Double.parseDouble((String) Inter.get(Inter.size() - 1)), Double.parseDouble(
							saveArray.get(i + 1)));
				}
				else if(saveArray.get(i) == "/")
				{
					number = new Calculator().Division(Double.parseDouble((String) Inter.get(Inter.size() - 1)), Double.parseDouble(
							saveArray.get(i + 1)));
				}
				else {
					continue;
				}
			}
			Inter.add(String.valueOf(number));
			Result.setText(Inter.get(Inter.size() - 1).toString());
		}
		
		System.out.println(Inter);
	}
}
